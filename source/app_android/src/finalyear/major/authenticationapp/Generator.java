/**
 * This class generates the 128 bit Shared Secret Key based 
 * a random number generated by Secure Random class object .
 */

package finalyear.major.authenticationapp;


import java.nio.charset.Charset;
import java.security.SecureRandom;
import java.util.Random;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

import android.annotation.SuppressLint;
public class Generator
{
		
		private Charset UTF_8 = Charset.forName("UTF-8");
		private String seed ="";
		//empty constructor ..
		public Generator(String seed)
		{
			this.seed=seed ;
		}
		
		@SuppressLint("NewApi")
		public  String generate() throws Exception
		{
		
			//Generate Random number ..
			
			int min=1000;
            int max=9999;
            Random rand = new Random();
            int randomNum = rand.nextInt((max - min) + 1) + min;
            seed=seed+randomNum;
            
			byte[] seedBytes=seed.getBytes(UTF_8);
			SecureRandom sr = new SecureRandom(seedBytes); //seed = password app .... 
			SecretKey key = null;
			byte[] bytes = new byte[16];

			// Generates a KeyGenerator object for the AES algorithm
			KeyGenerator kgen = KeyGenerator.getInstance("AES");
			kgen.init(128,sr); // 128 bits key size
			key = kgen.generateKey();
			//System.out.println(key.toString());
			bytes = key.getEncoded();
			return (Hex.encodeHexString(bytes)).toUpperCase();
		}

}

